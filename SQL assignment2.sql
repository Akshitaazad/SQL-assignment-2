use mavenmovies;

-- Retrieve the total number of rentals made in the Sakila database.
SELECT 
    COUNT(rental_id)
FROM
    rental;


-- Find the average rental duration (in days) of movies rented from the Sakila database.
select* from rental;
select* from film;
SELECT 
    AVG(rental_duration)
FROM
    film;


-- Display the first name and last name of customers in uppercase.
SELECT 
    UPPER(first_name), UPPER(last_name)
FROM
    customer;


-- Extract the month from the rental date and display it alongside the rental ID.
select * from rental;
SELECT 
    rental_id, rental_date, MONTH(rental_date) AS month
FROM
    rental;


-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
SELECT 
    customer_id, COUNT(rental_id)
FROM
    rental
GROUP BY customer_id;

-- Find the total revenue generated by each store.
SELECT 
    customer_id, SUM(amount) AS total
FROM
    payment
GROUP BY customer_id;

-- Display the title of the movie, customer s first name, and last name who rented it.
select * from film; -- title, film id
select* from inventory; -- film id, inventory_id
select * from rental; -- inventory_id customer_id;
select* from customer; -- first_name last name customer_id
SELECT 
    title, first_name, last_name
FROM
    film
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON inventory.inventory_id = rental.inventory_id
        INNER JOIN
    customer ON rental.customer_id = customer.customer_id;

use mavenmovies;
-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
select * from actor; -- first_name, last name, actor id
select * from film; -- title ,film id
select * from film_actor; -- actor_id film_id
SELECT 
    CONCAT(first_name, ' ', last_name) AS name
FROM
    actor
        INNER JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        INNER JOIN
    film ON film.film_id = film_actor.film_id
WHERE
    title = 'Gone with the Wind';
select film_ id from film where title= "Gone with the wind";
select title from film;

-- Determine the total number of rentals for each category of movies.
select* from film_category; -- film- id category id
select * from film;-- film_id
select * from inventory; -- film id, inventory id
select* from rental; -- inventory id
SELECT 
    category_id, COUNT(rental_id)
FROM
    film_category
        INNER JOIN
    inventory ON film_category.film_id = inventory.film_id
        INNER JOIN
    rental ON inventory.inventory_id = rental.inventory_id
GROUP BY category_id;

-- Find the average rental rate of movies in each language.
select * from film; -- rental rate, language id
select * from language; -- name language id
SELECT 
    AVG(rental_rate), name
FROM
    film
        INNER JOIN
    language ON film.language_id = language.language_id
GROUP BY name;

-- Retrieve the customer names along with the total amount they've spent on rentals.
select* from customer; -- customer_id first name last name
select * from payment; -- customer_id amount rental_id
select* from rental; -- rental id customer id
SELECT 
    CONCAT(first_name, ' ', last_name) AS name, SUM(amount)
FROM
    customer
        INNER JOIN
    rental ON customer.customer_id = rental.customer_id
        INNER JOIN
    payment ON rental.rental_id = payment.rental_id
GROUP BY customer.customer_id;

-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
select * from customer; -- customer_id address id
select * from address; -- address id city id
select * from city; -- city id country id
select * from rental; --  rental id inventory id customer id
select * from inventory; -- inventory id  film id
select * from film;-- film id, title
 SELECT 
    title, c.customer_id, city
FROM
    customer AS c
        INNER JOIN
    address AS a ON c.address_id = a.address_id
        INNER JOIN
    city AS ct ON a.city_id = ct.city_id
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory AS i ON r.inventory_id = i.inventory_id
        INNER JOIN
    film AS f ON i.film_id = f.film_id
WHERE
    ct.city = 'Sal';
    
-- Display the top 5 rented movies along with the number of times they've been rented.
select * from film;-- film id title rental duration
select * from inventory; -- inventory id film id
select* from rental; -- inventory_id
SELECT 
    title, COUNT(film.film_id) AS count_of_movies
FROM
    film
        INNER JOIN
    inventory AS i ON film.film_id = i.film_id
        INNER JOIN
    rental AS r ON i.inventory_id = r.inventory_id
GROUP BY title
ORDER BY count_of_movies DESC
LIMIT 5;

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
select* from rental; -- inventory_id rental id
select* from inventory; -- film id store id inventory id 
select * from customer; -- store id firstname last name

 